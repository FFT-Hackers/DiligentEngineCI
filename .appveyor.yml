# .appveyor.yml

# Build version
version: '2.4.{build}'

# Use the latest available toolchain
image: Visual Studio 2019

# fetch repository as zip archive
shallow_clone: true

# PRs do not increment the build number
pull_requests:
  do_not_increment_build_number: true

# Build configurations
configuration: Debug

# Default environment variables
environment:
  _IS_BUILD_CANARY: false
  _RELEASE_NAME: DiligentEngine
  # Use Python 3.x
  PYTHON: "C:\\Python38-x64"
  PYTHON_VERSION: "3.8.x"
  PYTHON_ARCH: "64"
  # MSVC
  _MSVC_RUNTIME: MultiThreadedDebug

install:
  - git clone --recursive https://github.com/DiligentGraphics/DiligentEngine.git
  - cd DiligentEngine
  - ps: |
      $file = 'CMakeLists.txt'
      $replaceWhat = 'project(DiligentEngine)'
      $replaceWith = "cmake_policy(SET CMP0091 NEW)`nproject(DiligentEngine)"
      (Get-Content $file).Replace($replaceWhat,$replaceWith) | Set-Content $file

# Prepare Cpp environment
before_build:
  - cmd: |
      set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true" -and $env:APPVEYOR_REPO_TAG_NAME) {
        $env:APPVEYOR_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION.Substring(0,$env:APPVEYOR_BUILD_VERSION.LastIndexOf('.')) + ".0"
        $env:_RELEASE_NAME = $env:_RELEASE_NAME + "-v" + $env:APPVEYOR_BUILD_VERSION
      } else {
        $env:_RELEASE_NAME = $env:_RELEASE_NAME + "-Canary"
        $env:APPVEYOR_REPO_TAG_NAME = "canary"
        $env:_IS_BUILD_CANARY = "true"
      }

build_script:
  - cmd: |
      md .dist\build\x86-%CONFIGURATION%
      cd .dist/build/x86-%CONFIGURATION%
      cmake -G "Visual Studio 16 2019" -A Win32 -DCMAKE_MSVC_RUNTIME_LIBRARY="%_MSVC_RUNTIME%" -DCMAKE_BUILD_TYPE="%CONFIGURATION%" -DCMAKE_PREFIX_PATH="install" -DCMAKE_INSTALL_PREFIX="install" -DDILIGENT_BUILD_TOOLS=1 -DDILIGENT_BUILD_FX=0 -DDILIGENT_BUILD_SAMPLES=0 -DDILIGENT_BUILD_DEMOS=0 -DDILIGENT_BUILD_UNITY_PLUGIN=0 -DDILIGENT_BUILD_TESTS=0 -DDILIGENT_INSTALL_PDB=1 --config %CONFIGURATION% ../../..
      cmake --build . --config %CONFIGURATION% --target install

# Do not run unit tests
test: off

# Package artifacts
artifacts:
  - path: DiligentEngine\.dist\build\x86-%CONFIGURATION%\install
    name: ${_RELEASE_NAME}_${CONFIGURATION}
    type: zip

# Create a GitHub release for every tag
deploy:
  # Deploy only when new tags are pushed
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}
    artifact: ${_RELEASE_NAME}_${CONFIGURATION}
    auth_token: ${_GH_DEPLOYMENT_TOKEN}
    on:
      _IS_BUILD_CANARY: false
  # Deploy on each commit
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME} v${appveyor_build_version}
    artifact: ${_RELEASE_NAME}_${CONFIGURATION}
    prerelease: true
    force_update: true
    auth_token: ${_GH_DEPLOYMENT_TOKEN}
    on:
      _IS_BUILD_CANARY: true
    description: |
      This is a canary build. Please be aware it may be prone to crashing and is NOT tested by anyone. Use this build AT YOUR OWN RISK!
